/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { ITellerNft } from "../ITellerNft";

export class ITellerNft__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITellerNft {
    return new Contract(address, _abi, signerOrProvider) as ITellerNft;
  }
}

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseLoanSize",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "hashes",
            type: "string[]",
          },
          {
            internalType: "address",
            name: "contributionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "contributionSize",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "contributionMultiplier",
            type: "uint8",
          },
        ],
        internalType: "struct ITellerNFT.Tier",
        name: "newTier",
        type: "tuple",
      },
    ],
    name: "addTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getOwnedTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "owned",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getTier",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseLoanSize",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "hashes",
            type: "string[]",
          },
          {
            internalType: "address",
            name: "contributionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "contributionSize",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "contributionMultiplier",
            type: "uint8",
          },
        ],
        internalType: "struct ITellerNFT.Tier",
        name: "tier_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierIndex",
        type: "uint256",
      },
    ],
    name: "getTierHashes",
    outputs: [
      {
        internalType: "string[]",
        name: "hashes_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenTier",
    outputs: [
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "baseLoanSize",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "hashes",
            type: "string[]",
          },
          {
            internalType: "address",
            name: "contributionAsset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "contributionSize",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "contributionMultiplier",
            type: "uint8",
          },
        ],
        internalType: "struct ITellerNFT.Tier",
        name: "tier_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "minters",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contractURIHash",
        type: "string",
      },
    ],
    name: "setContractURIHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
